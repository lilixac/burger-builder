{"version":3,"sources":["components/burger/burger-ingredients/burger-ingredients.module.css","components/burger/burger-controls/burger-control/burger-control.module.css","App.module.css","components/layout/layout.module.css","components/burger/burger.module.css","components/burger/burger-controls/burger-controls.module.css","components/layout/layout.jsx","components/burger/burger-ingredients/burger-ingredients.jsx","components/burger/burger.jsx","components/burger/burger-controls/burger-control/burger-control.jsx","components/burger/burger-controls/burger-controls.jsx","container/burgerbuilder/burgerbuilder.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","layout","props","className","styles","home","children","burgerIngredients","ingredients","type","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","map","key","Array","_","id","reduce","arr","el","concat","length","Burger","burgerControl","BuildControl","More","onClick","addIngredients","span","Label","label","toUpperCase","Less","removeIngredients","controls","burgerControls","BuildControls","price","toFixed","control","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","addIngredientHandler","updatedCount","updatedIngredients","newPrice","updatedPrice","setState","removeIngredientHandler","this","Component","App","Appheader","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd59623c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burger-ingredients_BreadBottom__18I-c\",\"BreadTop\":\"burger-ingredients_BreadTop__3LP_m\",\"Seeds1\":\"burger-ingredients_Seeds1__3pSP0\",\"Seeds2\":\"burger-ingredients_Seeds2__26ns4\",\"Meat\":\"burger-ingredients_Meat__1JZ9y\",\"Cheese\":\"burger-ingredients_Cheese__1cdoi\",\"Salad\":\"burger-ingredients_Salad__2jtd8\",\"Bacon\":\"burger-ingredients_Bacon__2Cjbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"burger-control_BuildControl__2TbLw\",\"Label\":\"burger-control_Label__qwTWf\",\"Less\":\"burger-control_Less__3JyUc\",\"More\":\"burger-control_More__2Edot\",\"span\":\"burger-control_span__35UqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Appheader\":\"App_Appheader__2tQho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"layout_home__2MkSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger_Burger__3XOKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"burger-controls_BuildControls__1zClp\"};","import React from \"react\";\nimport styles from \"./layout.module.css\";\n\nconst layout = (props) => <div className={styles.home}>{props.children}</div>;\n\nexport default layout;","import React  from \"react\";\n\nimport styles from \"./burger-ingredients.module.css\";\n\nconst burgerIngredients = (props) => {\n\tlet ingredients = null;\n\n\tswitch (props.type) {\n\t\tcase \"bread-top\":\n\t\t\tingredients = (\n\t\t\t\t<div className={styles.BreadTop}>\n\t\t\t\t\t<div className={styles.Seeds1}></div>\n\t\t\t\t\t<div className={styles.Seeds2}></div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase \"bread-bottom\":\n\t\t\tingredients = <div className={styles.BreadBottom}></div>;\n\t\t\tbreak;\n\t\tcase \"meat\":\n\t\t\tingredients = <div className={styles.Meat}></div>;\n\t\t\tbreak;\n\t\tcase \"cheese\":\n\t\t\tingredients = <div className={styles.Cheese}></div>;\n\t\t\tbreak;\n\t\tcase \"bacon\":\n\t\t\tingredients = <div className={styles.Bacon}></div>;\n\t\t\tbreak;\n\t\tcase \"salad\":\n\t\t\tingredients = <div className={styles.Salad}></div>;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tingredients = null;\n\t}\n\n\treturn ingredients;\n};\n\nexport default burgerIngredients;","import React from \"react\";\n\nimport BurgerIngredients from \"./burger-ingredients/burger-ingredients\";\n\nimport styles from \"./burger.module.css\";\n\nconst burger = (props) => {\n\tlet transformedIngredients = Object.keys(props.ingredients)\n\t\t.map((key) => {\n\t\t\treturn [...Array(props.ingredients[key])].map((_, id) => {\n\t\t\t\treturn <BurgerIngredients key={key + id} type={key} />;\n\t\t\t});\n\t\t})\n\t\t.reduce((arr, el) => {\n\t\t\treturn arr.concat(el);\n\t\t},[]);\n\n\tif (transformedIngredients.length === 0) {\n\t\ttransformedIngredients = <p> Please start adding ingredients </p>;\n\t}\n\treturn (\n\t\t<div className={styles.Burger}>\n\t\t\t<BurgerIngredients type=\"bread-top\" />\n\t\t\t{transformedIngredients}\n\t\t\t<BurgerIngredients type=\"bread-bottom\" />\n\t\t</div>\n\t);\n};\n\nexport default burger;","import React from \"react\";\nimport styles from \"./burger-control.module.css\";\n\nconst burgerControl = (props) => (\n\t<div className={styles.BuildControl}>\n\t\t<button className={styles.More} onClick={props.addIngredients}>\n\t\t\t<span className={styles.span}>+</span>\n\t\t</button>\n\t\t<div className={styles.Label}> {props.label.toUpperCase()} </div>\n\t\t<button className={styles.Less} onClick={props.removeIngredients}>\n\t\t\t<span className={styles.span}>-</span>\n\t\t</button>\n\t</div>\n);\n\nexport default burgerControl;","import React from \"react\";\nimport BurgerControl from \"./burger-control/burger-control\";\nimport styles from \"./burger-controls.module.css\";\n\nconst controls = [\n\t{ label: \"Salad\", type: \"salad\" },\n\t{ label: \"Bacon\", type: \"bacon\" },\n\t{ label: \"Cheese\", type: \"cheese\" },\n\t{ label: \"Meat\", type: \"meat\" },\n];\n\nconst burgerControls = (props) => (\n\t<div className={styles.BuildControls}>\n\t\t<p> TOTAL PRICE: {props.price.toFixed(2)} </p>\n\n\t\t{controls.map((control) => (\n\t\t\t<BurgerControl\n\t\t\t\tkey={control.label}\n\t\t\t\ttype={control.type}\n\t\t\t\tlabel={control.label}\n\t\t\t\taddIngredients={() => props.addIngredients(control.type)}\n\t\t\t\tremoveIngredients={() => props.removeIngredients(control.type)}\n\t\t\t/>\n\t\t))}\n\t</div>\n);\n\nexport default burgerControls;","import React, { Fragment, Component } from \"react\";\n\nimport Burger from \"../../components/burger/burger\";\nimport BurgerControls from \"../../components/burger/burger-controls/burger-controls\";\n\nconst INGREDIENT_PRICES = {\n\tsalad: 30,\n\tcheese: 30,\n\tmeat: 60,\n\tbacon: 50,\n};\n\nclass BurgerBuilder extends Component {\n\tstate = {\n\t\tingredients: {\n\t\t\tsalad: 0,\n\t\t\tbacon: 0,\n\t\t\tcheese: 0,\n\t\t\tmeat: 0,\n\t\t},\n\t\tprice: 20,\n\t};\n\n\taddIngredientHandler = (type) => {\n\t\tlet oldCount = this.state.ingredients[type];\n\t\tlet updatedCount = oldCount + 1;\n\t\tconst updatedIngredients = { ...this.state.ingredients };\n\t\tupdatedIngredients[type] = updatedCount;\n\t\tconst newPrice = INGREDIENT_PRICES[type];\n\t\tconst updatedPrice = this.state.price + newPrice;\n\t\tthis.setState({ ingredients: updatedIngredients, price: updatedPrice });\n\t};\n\n\tremoveIngredientHandler = (type) => {\n\t\tlet oldCount = this.state.ingredients[type];\n\t\tlet updatedCount = oldCount - 1;\n\t\tif ( updatedCount < 0 )  {\n\t\t\treturn;\n\t\t}\n\t\tconst updatedIngredients = { ...this.state.ingredients };\n\t\tupdatedIngredients[type] = updatedCount;\n\t\tconst newPrice = INGREDIENT_PRICES[type];\n\t\tconst updatedPrice = this.state.price - newPrice;\n\t\tthis.setState({ ingredients: updatedIngredients, price: updatedPrice });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Burger ingredients={this.state.ingredients} />\n\t\t\t\t<BurgerControls\n\t\t\t\t\tprice={this.state.price}\n\t\t\t\t\taddIngredients={this.addIngredientHandler}\n\t\t\t\t\tremoveIngredients={this.removeIngredientHandler}\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default BurgerBuilder;\n","import React from \"react\";\n\nimport styles from \"./App.module.css\";\nimport Layout from \"./components/layout/layout\";\nimport BurgerBuilder from  './container/burgerbuilder/burgerbuilder';\n\nfunction App() {\n  return (\n    <Layout>\n      <header className={styles.Appheader}>BURGER BUILDER</header>\n      <BurgerBuilder />\n    </Layout>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}